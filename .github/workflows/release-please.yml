name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          # need an explicit token here, otherwise the pull request created will not
          # get other actions run on its behalf
          # https://github.com/googleapis/release-please/issues/922#issuecomment-861154425
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

      # The following steps run only if a release was created
      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs.release_created }}
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}

      - name: Setup Git User
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Merge main into deploy
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git checkout deploy
          git merge --no-ff main -m "chore: merge main into deploy for release ${{ steps.release.outputs.tag_name }}"
          git push origin deploy
      - name: Notify Slack of Deploy Start
        if: ${{ steps.release.outputs.release_created }}
        uses: slackapi/slack-github-action@v2.1.1
        with:
          payload: |
            text: ":rocket: Production Deployment Started"
            blocks:
              - type: header
                text:
                  type: plain_text
                  text: ":rocket: Production Deployment Started"
              - type: section
                fields:
                  - type: mrkdwn
                    text: "*Version*\n${{ steps.release.outputs.tag_name }}"
                  - type: mrkdwn
                    text: "*Release PR*\nhttps://github.com/${{ github.repository }}/pull/${{ fromJson(steps.release.outputs.prs)[0].number }}"
              - type: section
                fields:
                  - type: mrkdwn
                    text: "*Triggered by*\n${{ github.actor }}"
        env:
          SLACK_WEBHOOK_URL: ${{ vars.SLACK_WEBHOOK_URL }}
  sentry-release:
    name: Create Sentry Release
    runs-on: ubuntu-latest
    steps:
      - name: Install Sentry CLI
        run:
          curl -sL https://sentry.io/get-cli/ | bash

          # The following steps run only if a release was created
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}

      - name: Create Sentry Release
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: tambo-ai
          SENTRY_PROJECT: tambo-cloud
        run: |
          VERSION=$(sentry-cli releases propose-version)
          sentry-cli releases new "$VERSION"
          sentry-cli releases set-commits "$VERSION" --auto
          sentry-cli releases finalize "$VERSION"
