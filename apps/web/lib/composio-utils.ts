// Note that this file was generated by pasting in a bunch of sample values into Cursor
// and then asking it to generate the types.

/** possible authentication modes */
export type ComposioAuthMode = "API_KEY" | "OAUTH2" | "BEARER_TOKEN" | "BASIC";

export interface ComposioConnectorConfig {
  /** unique name of this connector */
  name: string;

  /** where to proxy requests */
  proxy: {
    base_url: string;
    headers?: Record<string, string>;
  };

  /** optional base URL */
  base_url?: string | null;

  /** auth mode */
  mode: ComposioAuthMode;

  //
  //–– optional OAuth2 / Bearer‑token properties ––
  //

  /** OAuth2: authorize endpoint (or null for API_KEY) */
  authorization_url?: string | null;
  /** OAuth2: token endpoint (or null for API_KEY) */
  token_url?: string | null;
  /** OAuth2: default scopes (or null for API_KEY) */
  default_scopes?: string[] | null;
  /** OAuth2: how scopes are separated in the URL (often a space) */
  scope_seperator?: string | null;
  /** OAuth2: any extra fixed query‑params for the auth redirect */
  authorization_params?: Record<string, any> | null;
  /** OAuth2: method to call token_url (e.g. 'POST') */
  token_access_request_method?: string | null;
  /** OAuth2: how to authenticate when calling token_url */
  token_request_auth_method?: string | null;
  /** OAuth2: extra fixed body‑params for the token request */
  token_params?: Record<string, any> | null;
  /** OAuth2: parameters for refreshing the token */
  refresh_params?: Record<string, any> | null;
  /** OAuth2: keys to pluck out of the token response */
  token_response_metadata?: any[] | null;
  /** OAuth2: whether to disable PKCE */
  disable_pkce?: boolean;
  /** OAuth2: all available scopes supported by the provider */
  available_scopes?: string[] | null;
  /** OAuth2: scopes to request on behalf of the user */
  default_user_scopes?: string[] | null;

  /** UI‑driven fields you need to collect from the customer */
  fields: ComposioField[];
}

/** UI‑driven fields you need to collect from the customer */
export interface ComposioField {
  name: string;
  type: string;
  description: string;
  display_name: string;
  required: boolean;
  override: boolean;
  default: any;
  expected_from_customer: boolean;
  is_secret: boolean;
}
